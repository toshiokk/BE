#### BE-editor to do list (H: high priority, L: Low priority, e: easy, d: difficult, v: done, -: impossible)

[] treat symlink path as is and not in real-path
[v] sort symlinks to the next of directories

[] differnciate "buffer saved" and "buffer checked"
[v] delete "Save unmodified file ??"

[v ] show file path on the title bar as long as possible

[v] tag jump with just file_name.ext switches already open file
[v] tag jump with just file_name.ext opens file listed in openfile_history
[v] return to file positon where KW replace has begun
[v] return to file positon where KW search has begun

[v] re-support tag jump from MS-C compiler error message "main.c(100,10)"
[v] when reopened, current file pos is the last line in all file
[v] tag jump opens too many files. F11 opens only one file maximum

[v] share cut-buffer between BE-editor-instances (Use system clip-board or own clip-board file)
	F06/F07 cut/copy selection to clip-board
	[v] Shift-F07 paste clip-board into current cursor pos(character based paste)
	[v] Shift-F08 paste clip-board into current line(line based paste)
	[v] support both character copy and line copy (on GUI based app. there is the only character based cut)

[] difficult to memorize below function keys for human
[v] input_string() by filer
  | key         | string to be input | replace/append  | action                                       |
  |-------------|--------------------|-----------------|----------------------------------------------|
  | e,d,c       | file name          | replace         | input file name replacing previous string    |
  | E,D,C       | file path          | replace         | input file path replacing previous string    |
  | M-e,M-d,M-c | file name          | append          | input file name appending to previous string |
  | M-E,M-D,M-C | file path          | append          | input file path appending to previous string |
  | m,M         | dir path           | replace         | input dir path replacing previous string     |
  | M-m,M-M     | dir path           | append          | input dir path appending to previous string  |

[v] The same data should be saved after loading binary file.(Ex. PNG file)
  load: 0x00--0x1f,0x7f--0xff ==> 0x0100--0x011f, 0x17f--0x1ff
  save: 0x0100--0x011f,0x17f--0x1ff ==> 0x00--0x1f,0x7f--0xff

[v] change directory on file path "/dir/to/file.txt" to directory "/dir/to/"
[v] change directory on relative file path "./dir/to/file.txt" to relative directory "./dir/to/"
[x] after changing directory to "./dir/to/" by "./dir/to/file.txt", point "file.txt"
[v] open file based on buffer's direcotry
[v] change directory based on buffer's direcotry

[v] cursor position when returned to filer
[v] automatic fallback when no nkf filter available

[v] Show `username@hostname` in the title bar in filer (no need in editor)
[v] Avoid showing directory path like "///" (remove_redundant_slash())
[v] Avoid changing directory on "///" (contain_redundant_slash())

[v] Execute script specifying absolute path from current directory.(E/R/T/X)

[v] code clean up for filer view mode

[v] Avoid inputting garbage on Atl-Fxx key. ==> register all xterm keys
[-] Auto indent by Alt-Enter

[v] recognize Alt-UP, Alt-Down, Alt-Right, Alt-Left keys
              \e[1;3A \e[1;3B \e[1;3D \e[1;3C
[v] recognize Ctrl-UP, Ctrl-Down, Ctrl-Right, Ctrl-Left keys
              \e[1;5A \e[1;5B \e[1;5D \e[1;5C
[v] cut_to_head(), cut_to_tail() ==> delete_to_head(), delete_to_tail()
[v] start up in two pane filer ==> add "-w" command line option
[v] update history with cur-dir just before changing cur-dir
[v] Not delimit file path by # ("abc#def" ==> "abc#def", "abc #def" ==> "abc" "#def")
[v] blink title bar when recording key macro or marking text
[v] Avoid screen corruption on binary file
	- convert fake UTF-8 character to normal UTF-8 char.
	==> input nkf -w, output: nkf -W

Filer <==> Editor switching and collaboration
[] Fix [goto filer] key and [goto editor] key
  | mode      | F11         | F12                                 |
  | --------- | ----------- | ----------------------------------- |
  | in filer  | GOTO EDITOR | open file in editor / open in filer |
  | in editor | GOTO FILER  | open file in editor / open in filer |
v F: Load file and open editor
   E: Edit
v F: Input command line to execute
   E: Select from exec-history
  F: Execute selected command line
v F: Input keyword to search
   F: Select from search-history
  F: Do search
- F: Load file and open editor (wo saving cur-dir)
   E: Change current-directory to the directory of the current-line
- F: Load file and open editor (wo saving cur-dir)
   E: Change current-directory to the directory of the current-line
   E: Open filer
  F: Do something in current-directory (**possible to implement**)
- F: Load script file and open editor (wo saving cur-dir)
   E: Open filer
    F: Change current-directory
   E: Execute current-line as a command
      (preserve current-directory if changed in execution(***DIFFICULT***))

[v] inherit filer view(cur_sel_idx) in "filer list view"
[v] after screen resized, status bar is not displayed

[ ] show tree and select file/directory
[] change current directory by selecting from directory tree (find . -type d -maxdepth 3)
[] load file                by selecting from file      tree (find . -type f -maxdepth 3)
   (how to limit max lines to be loaded into editor)

[v] change current directory in editor
    [x] show current directory in editor (==> shown after change)

/home/user/tools/be/be
/home/user/tools/be/be/po
/home/user/tools/be/be/doc
/home/user/tools/be/be/demo
/home/user/tools/be/be/scripts
/home/user/tools/be/be/protected
/home/user/tools/be/be/testfiles
/home/user/tools/be/be/autom4te.cache
/home/user/tools/be/be/m4
[] How to manage a state of 0 node
[] How can I avoid NULL pointer crash ?
[v] Use title-bar fully for file path
  [p:i:/path/to/file.txt Enn Cnn Unn Rnn mmmmMB HH:MM:DD]
  [p:i:/long/long/long/path/to/file.txt  mmmmMB HH:MM:DD]
  [p:i:/long/long/very-long/path/to/file.txt    HH:MM:DD]

[v] Repaint whole of screen after wake up from sleep
[v] Stop loading large or many files. (by Ctrl-C)
[v] Show date in space for Time just after key press
[v] sofisticate filer_do_next mechanism
[v] sofisticate editor_quit mechanism

[v] easy goto prev/next buffer
	- UP then PAGEUP ==> prev.buf, DOWN then PAGEDOWN ==> next.buf)
	- PAGEUP then UP ==> prev.buf, PAGEDOWN then DOWN ==> next.buf)

[v] check memory leak
  [v] fix memory leak
[v] lighter background color by ESC [ {100,107} m
[v] easily change release-level: stable-release, test-release, experimental-release
[-] visit all cut mode by moving cursor horizontal and vertical in specific way.
    ==> [v] clear cut mode by returning cursor to beginning position.
[v] editor: when scrolling reverse direction, previous area should be shown.
[v] return to filer main screen after run file soon

#### thinking
- Which is the better practice
	1. strict type specification uint8_t, int8_t, int16_t, int32_t
	2. vague type specification unsigned char, char, int ...
	3. typedef char color_idx, items_idx, ...
	May be 3. is the better.

### Reconsideration of editor/filer 2 panes:
  Editor 2 panes
    - each pane has buffer refrence.
    - current pane selector (cur_pane_idx)
  Filer 2 panes
    - each pane has directory refrence.
    - current pane selector (cur_pane_idx)
  Buffer has 2 views which is referenced from editor 2 panes
    - each view has current position in buffer

[v] Highlight only current cursor position's peer of brackets in first-highlight-color.
  [v] Highlight not-current-peer in second-hightlight-color.
[v] go back to the last cursor pos. in the last file.
[v] limit current y position of editor screen on resize window
[v] directory invert search direction on Key B and F.
[v] line tail indicator when line shift
[v] If not-modified in write_file_modified, clear [Modified] flag.
[ ] Check object copy
[v] Write Node policy
[v] Adopt Node policy

[v] Do not update file_open_history if current line not changed
[v] Draw cursor off
[v] If no keyword found on first search, search reverse direction.
[vv] Fix editor crash problem
[v] avoid view shift at cut_to_tail
[v] Save all modified buffer with ask, without ask.
[v] Play back key macro when recording key macro.
   - separate two key assigns of stop-rec-key-macro and play-back-key-macro[K_M_2].
[vv] counter bracket highlighting {[(< >)]}
[v] Color of selection
[v] avoid cursor to jump around the line tail
[v] History list ==> multi-buffer accessible from editor as edit buffers.
[v] Link all buffers
[v] Switch all buffers
[v] When playbacking key-macro, do-not jump cursor.(any side effect ?)
[v] Show lines selected on status bar.
[v] Try to read more than 1000 lines in proj-file.

[v] Show line tail pos on ruler.
[v] Screen auto resizing allong with terminal resizing
[v] Refresh all screen to clear scam.

[x]can not open file with file name including ' ' in head or tail.
 (Ex. " filename.exe" or "filename.ext ")
  - own file list: enclose by '|'. Ex. '/home/user/tmp/ file name.txt '|100:20
  - command line: enclose by '"' or "'". Ex. " file name.txt " or ' file name.txt '

[-]Improbe page-up, page-down cursow movement.

[-]Self investigate which Charactor width in Zenkaku or Hankaku charactors.
  ==> Impossible. OS library does not treat Zenkaku char correctly.
  ==> Workaround: Treat all unbiguous char as a Zenkaku char. and
                  increment display position by 2 selfly not depending on
                  terminal display capability.

[x]#bot_anchor
[v]avoid cur_line became wild pointer

Editor 2 pane mode
  initialize
    pane-1		anchor		anchor
  open
    selected-pane	open-file	valid-bufferに補正
  switch pane
    pane-2		open-file	valid-bufferに補正
  delete line
    pane-1		delete-line	chose cur_line before unlinking line
  close
    selected-pane	chose valid-buffer before unlink	chose valid-buffer before unlink

[v]switch 1 pane when entering list-mode

[v]Undo後にカーソルが変更か所に移動しない。
[]M-z (reopen_file) bug

[ex]long sequence of key macro
[d ]scroll back screen(input/output log)
[e ]Open new file without file-name
[dx]simple UNDO/REDO
[ex]change current dir on start up
[?x]Flash IMJ input line
[dx]display ruler
  12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567
  1---5----10---15---20---25---30---35---40---45---50---55---60---65---70---75---80---85---90---95---100--105
[dx]non-bit-map-based setting variables
[ex]history ==> buffer
[dx]display line number
[dx]syntax highlighting with line wrapping
[dx]multi search word highlighting
[e-]periodically check opening file update by other apps
[d-]keep files open until exiting be
[d-]avoid corruption of kanji display using ncurses
[dx]read binary file
[x]force kanji encoding on read -ej(JIS) -ee(EUCJP) -es(SJIS) -eu(UTF8) -ea(ASCII:No nkf conversion)
[]auto backup to filename.ext~~~~~~~~~~~
[]M-x ==> ESC-x
//[pe]cursor positioning to the previous on reopening file
[pd]cursor position history
//[pd]line wrapping
//	avoid current line hopping
//	marked segment highlighting
//	line cut copy paste
//	line end "<" - notation
//	C comment syntax highlighting /* ... */
//	do_down()
//	tab display
//[e]Prevent from reading too large file(>128MB).

[]Wide char mode '#' ==> '＃'
[]replace mode
[pd]embedded/minimal environment(wo/curses ,termcap and termlib. only dumb terminal)
[pe]display line number
[pe]memorize line and return

//[pe]write not to symlink but to realpath
[pe]write as
//[pe]readable key macro history
//[pd]support Qt .pro as a project file
[pe]#include <file.h> search path /usr/include, /usr/local/include
[ d]output to history of all actions done
[ d]open so many files in background (by thread)
[pe]input from stdin
//[nd]undo
//[pe]select history from list displayed
//[pe]search/exec/dir/open-file history
//[pe]multi-line character cut
//[pd]speed down on large file
//[pd]consider vulnerability sprintf==>snprintf
//truely change directory
//break repeating execution of filer command by ^C
//tab size selection of file type(c|h:4, text:8)
//keep browsing directory and don't change filer directory
//755 ==> rwsr-xr-x
//funny color in super user
//[pe]distinguish history types:
// execution(x)/directory(d)/search-string(s)	2006/07/31>08/03
//[pe]a command(select all files)		2006/07/31>08/01
//don't change cur directory of the original filer
//file selection by Enter in file open mode

//not return beginning position after replacing
//ChDir to ..
//Shift-F4 hang-up on Slang-1.4.9
//red screen for super user
//libslang-utf8-1.4.9 + mbctowc
//[pe]file sort by name or extension
//[pd]box cut/paste
//[nd]backward replace search yes/no/back/undo/cancel
//[pd]preserve very long line 3200-->65536
//[pd]ESC key handling on SLang
//[pd]./configure, make, make install (adopt to autoconf/automake)
//[pe]eliminate needless screen update
//[pd]automatic euc/sjis/utf8 recognition and import/export using nkf
//[pe]write current file (even though not modified)
//[pe]usability in various terminals ==> SLkp_getkey() and SLkp_define_keysym()
//[pd]make cursor movement reasonable after search, replace, move and page up/down
//[pd]change direct calling to disp_edit_win() to set_update_ne...()
//[nd]understand search.c
//check file modification of original file on writing file
//[pe]avoid double file open by comparing absolute path
//[pe]avoid double file open by comparing real path of symbolic-link
//[pe]reopen / undo (M-U)
//cursor brought to the last line
//[pd]cursor line highlighting
//[pe]new file
//[pe]do not open unexistent file on Goto file
//extend key board macro strokes from 100 to 1000
//screen update in do_close_all()
//[pe]open project file(Alt-p)
//[pe]display key bindings by key code order or by function order
//[pd]file list currently open
//[pd]speed up drawing
//[pd]utf-8 support
//[pd]use Slang instead of ncurses
//[pd]abstruct a terminal abstruction layer
//[nd]control code in regex keyword search/replace(\t, \x1b, ...) ==> PCRE
//[nd]make winio.c comprehensive
//[pa]re-ordering file classification
//[pa]delete unused functions -- mouse/justification/spell
//[pe]rename all user function to do_xxxx()
//[pd]display key bindings
// ==File======================
// | Close file       C-Q     |
// | Close all files  M-Q     |
// | Save all files   M-S     |
// | Read file        M-R     |
// | Write file       M-W     |
// | Tagged jump      M-J,F12 |
// ============================
//memory fault on paste when marking
//[pd]Save only truelly modified files (CRC checksum)
//[pd]select more than one files in file browser
//[pe]save keyboard macro to file
//[pd]history string ordering
//[pd]paste on cursor position
//[pe]tab size switch 8 <==> 4
//cursor pos after region cut
//[pe]beep on Memory fault (SIGSEGV)
//[pe]preserve original file's permissions
//[pd]vertical/horizontal scroll margin also at searching
//[pe]switch between two previouslly selected files(Alt-/)
//[pe]switch files(Alt-</Alt->)
//[pe]current file highlighting when top file selected
//[pe]input control code(like mifes ^V-c)
//[pe]UPPER/lower case conversion(^W)
//[pe]indicate new file on status bar
//[pe]cursor position after pasting
//[nd]project management file / listing files opened in editor
//[pe]returning to original position after global search/replace
//[nd]global keyword search/replace
//[pe]screen scrolling after pasting
//[ne]To be able to Load long-long line
//[pe]Save all modified files(Alt-A)
//[pe]Close all files(Alt-Q)
//[pe]read .rc file from the current directory at start up
//[pe]replace previous words
//[bug]replace-string listing ordering
//[p]make usable ESC key
//[p]make usable Shift-Fx in Xterm
//  Shift-Fx ==> Alt-x (ex. Shift-F4 ==> Alt-4)
//[pe]Cancel key = ^Z
//[p]make block cursor visible in Xterm
//  Alt-C toggles block cursor on and off
//[ne]action when window resized
//[pe]make "previous word/next word" efficient
//speed up file browser
//[pe]TAB color, EOL color, normal color, cursor color
//[pe]Charactor base cut / Line base cut
//[pe]TAB character/end of line/double byte space indication
//[pe]Cursor Inversion and Blinking
//[bug]replace string history Not memoried
//[bug]^L:cut to end of line
//[pe]Function key help
//  Menu1 Menu2 Replac Search  Mark- Cut-- Copy- Paste  ----- Jump- ----- -----
//[pe]stack type cutbuffer
//replace a word at the cursor pos
//[pe]goto file - don't open pre-opened file. compare by full path
//do_left bug
//colorfull screen
//keep previous search string
//goto file
//scroll horizontally
//cut to the tail of the line
//keyboard macro
//quick keyword search
//search forward/backward keys
//display cutbuffer status
//keyboard function mapping
//expand editing area
//previous word/next word
//exit without asking file name
//No confirmation of output file name at Exit
//Two bytes key code
//Copy function (Cut/Uncut) ==> (Cut/Copy/Uncut)
//Not automatically add magicline(The last line).

Change log by Koike -- n:neccesary,p:preferable,e:easy,d:difficult,a:always

[Schedule]----------------------------------------------2006/07/10
//[pd]own configuration file				2006/07/20
//[pd]customizable key bindings				2006/07/25
//[pe]define menu_color					2006/07/25
//[pe]assign filer command to function keys		2006/07/25
//[pe]determine nice color set				2006/07/25
[pd]test building on various environments		2006/07/31
[pd]make key mapping mifes/vz/ws			2006/07/31
[pd]own comment						2006/08/06
[pd]send nano author and be allowed to publish		2006/08/10
[pd]upload sourceforge.net				2006/08/31

[publishing]--------------------------------------------2013/07/10
Change log -- n:neccesary,p:preferable,e:easy,d:difficult,a:always
[x]avoid flickering in drop down menu.
[]Scroll drop down menu.
[d]Read text from the file.
[]editor two pane mode.
[]paste absolute or relative file or directory path.
[]duplicate file if not modified when "write file" invoked.
[]incorporate .bach_history
[x]Delete Monocrome mode
[x] 8 colors ==> 16 colors

[BUGS]------------------------------------------------------------------------------
//UTF8 directory/file name support

[Crash/Fixes]-----------------------------------------------------------------------
CFCFCFCFCFCFFF

[Build and Running environments tested]
RH8
RH9
FC1
FC2
FC3
FC4
FC5
VINE
TL10
TL11	No-ncurses.h,slang.h,pcre.h libslang-utf8-1.4.9
Ubuntu
SUSE

[Filer 2 pane mode]
123456789012345678901234567890123456789012345678901234567890
user@tl11fuji:tty1                                  23:59:59
1:/home/user/dir1/dir2       |2:/home/user/dir3/dir4
buffer.c                     |
buffer.h                     |
buffer.o                     |
build.log                    |
color.c                      |
buffer.c     12345  rwxrwxrwx|buffer.c     12345  rwxrwxrwx

[Editor 2 pane mode]
123456789012345678901234567890123456789012345678901234567890
1:/home/user/todo.txt                               23:59:59
1:/home/user/todo.txt        |2:/home/user/todo2.txt
config.status                |
config.sub                   |
configure                    |
configure.ac                 |
configure.log                |
buffer.c     12345  rwxrwxrwx|buffer.c     12345  rwxrwxrwx

[buffer type]
	edit buffer
	internal buffer
		cut buffer
		file list
		key list
		function list
	history buffer
		history list

--------------------------------------------------------------------------------------
Function	command-line	   config-file	    command
--------------	------------	   -----------	    -------
rcfile			O		-		-
norcfile		O		-		-
nohistory		O		-		-
nonkf			O		-		-
debug			O		-		-
encoding		O		-		-
tabsize			O		O		O
view			O		-		-

//monocrome		-		O		O
draw_cursor		+		O		O
key_list_lines		3		O		O
key_code_7f_bs		-		O		O
utf8
show_ruler		+		O		O
show_line_num		+		O		O
cursor_center		-		O		O
auto_indent		-		O		O
backup_files		10		O		O
ignore_case		-		O		O
regexp			-		O		O
syntax_hl		+		O		O
tab_eol_notation	+		O		O
show_dot_file		-		O		O
show_file_info		6		O		O
sort_by			0		O		O
filer_panes		-		O		O

//--------------------------------
Maximum line length of the source code: 100.
//--------------------------------
int _abc; // not-recommended
int main(void)
{
  int abc__def; // not-recommended
  int _Abc; // not-recommended
}
//--------------------------------

[BUGS]------------------------------------------------------------------------------
//not return beginning position after replacing
//ChDir to ..

//[pe]distinguish history types:
// execution(x)/directory(d)/search-string(s)		2006/07/31>08/03
//[pe]a command(select all files)			2006/07/31>08/01

[pe]emulate cursor blinking

[pe]input from stdin
//[pe]cursor positioning after reopening file

--------------------------------------------------------------------------------------

open/close(device)
begin/end
init/destroy
init/finalize
create/free(memory)
construct/destruct(object)
clear/set(value)
show/hide(window)
start/terminate(process)

--------------------------------------------------------------------------------------
USB bootable Linux can be a killer application to Windose.
USB からブート可能なOS(Linux)は、きっとWindoseに対するキラーアプリになる。

Linux は便利な利用法としてUSBディスクからのブートが可能である。
しかし、Mirocsoft は Linux のこの利便性を真似する事が出来ない。

なぜなら、そうすることは彼らのもっとも重要なソフトウエア製品の野放図なコピーを
許すことになってしまうからである。

M$のソフトウエアはPCにインストール後、ソフトウエア・アクティベーションを行う必要がある。
アクティベートされたソフトウエアは異なるコンピュータ上で実行できない様になっている。
LANチップ中のMACアドレスや、CPUやマザーボードのシリアルNo.などを記憶しておき、
それらが変わった時は異なるPC上で実行されたと判断し、使用できなくしている。
そうする事によって、彼らの製品の野放図なコピーを行えなくしているのだ。

ソフトウエア・アクティベーションの回数はM$の社内でカウントされていて、
可能なアクティベーションの回数は3回とか5回とかに制限されている。
